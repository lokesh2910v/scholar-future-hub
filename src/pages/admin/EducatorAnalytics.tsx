
import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { Badge } from '@/components/ui/badge';
import { Link } from 'react-router-dom';
import { Users, BookOpen, Star, TrendingUp, Plus } from 'lucide-react';

// Mock educator data
const mockEducators = [
  {
    id: '1',
    name: 'Sarah Johnson',
    email: 'sarah.johnson@example.com',
    courses: 5,
    students: 1250,
    rating: 4.8,
    revenue: 45600,
    joinedDate: '2023-01-15',
    status: 'active'
  },
  {
    id: '2', 
    name: 'Michael Chen',
    email: 'michael.chen@example.com',
    courses: 3,
    students: 890,
    rating: 4.6,
    revenue: 32400,
    joinedDate: '2023-03-22',
    status: 'active'
  },
  {
    id: '3',
    name: 'Emily Rodriguez',
    email: 'emily.rodriguez@example.com',
    courses: 7,
    students: 2100,
    rating: 4.9,
    revenue: 78900,
    joinedDate: '2022-11-08',
    status: 'active'
  },
  {
    id: '4',
    name: 'David Kim',
    email: 'david.kim@example.com',
    courses: 2,
    students: 450,
    rating: 4.4,
    revenue: 18900,
    joinedDate: '2023-06-10',
    status: 'pending'
  }
];

const EducatorAnalytics = () => {
  const totalEducators = mockEducators.length;
  const activeEducators = mockEducators.filter(e => e.status === 'active').length;
  const totalRevenue = mockEducators.reduce((sum, e) => sum + e.revenue, 0);
  const avgRating = mockEducators.reduce((sum, e) => sum + e.rating, 0) / mockEducators.length;

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="flex justify-between items-center mb-8">
          <div>
            <h1 className="text-3xl font-bold text-gray-900 mb-4">Educator Analytics</h1>
            <p className="text-gray-600">Monitor and manage platform educators</p>
          </div>
          <Button asChild>
            <Link to="/admin/educators/add">
              <Plus className="w-4 h-4 mr-2" />
              Add Educator
            </Link>
          </Button>
        </div>

        {/* Overview Stats */}
        <div className="grid md:grid-cols-4 gap-6 mb-8">
          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">Total Educators</CardTitle>
              <Users className="h-4 w-4 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">{totalEducators}</div>
              <p className="text-xs text-muted-foreground">
                +2 from last month
              </p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">Active Educators</CardTitle>
              <TrendingUp className="h-4 w-4 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">{activeEducators}</div>
              <p className="text-xs text-muted-foreground">
                {((activeEducators / totalEducators) * 100).toFixed(1)}% of total
              </p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">Total Revenue</CardTitle>
              <BookOpen className="h-4 w-4 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">${totalRevenue.toLocaleString()}</div>
              <p className="text-xs text-muted-foreground">
                Generated by educators
              </p>
            </CardContent>
          </Card>

          <Card>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium">Average Rating</CardTitle>
              <Star className="h-4 w-4 text-muted-foreground" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold">{avgRating.toFixed(1)}</div>
              <p className="text-xs text-muted-foreground">
                Platform average
              </p>
            </CardContent>
          </Card>
        </div>

        {/* Educators Table */}
        <Card>
          <CardHeader>
            <CardTitle>All Educators</CardTitle>
          </CardHeader>
          <CardContent>
            <Table>
              <TableHeader>
                <TableRow>
                  <TableHead>Educator</TableHead>
                  <TableHead>Courses</TableHead>
                  <TableHead>Students</TableHead>
                  <TableHead>Rating</TableHead>
                  <TableHead>Revenue</TableHead>
                  <TableHead>Status</TableHead>
                  <TableHead>Actions</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {mockEducators.map((educator) => (
                  <TableRow key={educator.id}>
                    <TableCell>
                      <div>
                        <div className="font-medium">{educator.name}</div>
                        <div className="text-sm text-gray-500">{educator.email}</div>
                      </div>
                    </TableCell>
                    <TableCell>{educator.courses}</TableCell>
                    <TableCell>{educator.students}</TableCell>
                    <TableCell>
                      <div className="flex items-center">
                        <Star className="w-4 h-4 fill-yellow-400 text-yellow-400 mr-1" />
                        {educator.rating}
                      </div>
                    </TableCell>
                    <TableCell>${educator.revenue.toLocaleString()}</TableCell>
                    <TableCell>
                      <Badge variant={educator.status === 'active' ? 'default' : 'secondary'}>
                        {educator.status}
                      </Badge>
                    </TableCell>
                    <TableCell>
                      <Button variant="outline" size="sm" asChild>
                        <Link to={`/admin/educators/${educator.id}`}>
                          View Details
                        </Link>
                      </Button>
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default EducatorAnalytics;
